from collections import Counter
s = input()
Counter = Counter(s) // counter is dictionary type data type. creating an object on counter and passing s inside it. It will create a dictionary and count automatically occurance. key(string) - value(occurance)

sorted_char = sorted(Counter.items(),key = lambda x:(-x[1],x[0])) // counter.items will create tuple in list format. its easier to sort the lis. thats why we are creating list. annonymous lambda fuctions will help to sort the list in descending order.

for char, count in sorted_char[:3]: 
    print(char,count)

// EXPLANATION---------------------------------------------
// You use this specific lambda expression when:

// You're sorting a list of (key, value) pairs (like from Counter.items()),

// You want to sort by:

// Descending order of value (-x[1]),

// And alphabetical order of key (x[0]) if values are equal.

// EXAMPLE-------------------------

// data = [('apple', 5), ('banana', 3), ('grape', 5), ('cherry', 2)]

// sorted_data = sorted(data, key=lambda x: (-x[1], x[0]))
// print(sorted_data)
